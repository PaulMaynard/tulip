@model List<Gamification.UI.Models.Message> // Note that the model is a list of chat messages

@{
    var currentUserId = ViewBag.CurrentUserId;
    var receiverId = ViewBag.ReceiverId;
    var receiverName = ViewBag.ReceiverName; 
    var currentUserName = ViewBag.CurrentName;
}

<div style="height: 100%; width: 100%; display: flex; flex-direction: column; justify-content: space-between;">
    <div>
        <a href="@Url.Action("Chats", "Home")" class="btn btn-primary">Back to Chats</a>

        <div style="width:100%; margin-bottom: auto;">
            @if (Model == null || !Model.Any())
            {
                <div class="mt-3">
                    <div class="alert alert-primary alert-dismissible" role="alert">
                        Nothing found yet!
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                </div>
            }
            else
            {   
                <div id="chat-messages" style="width:100%; max-height: 80vh; overflow-y: scroll; margin-bottom: auto;">
                    @foreach (var message in Model)
                    {
                        <div >
                                @if (message.SenderID == currentUserId) {
                                    <div class="card mt-3 bg-primary p-2 ml-auto" style="width:fit-content; max-width: 50%;  margin-right:0; margin-left: auto">
                                        <div class="text-sm fw-sm text-end text-white" style="font-size: x-small;">
                                            @message.Timestamp @currentUserName
                                        </div>
                                        <div class="text-white  text-end">@message.Content</div>
                                    </div>
                                } else {
                                    <div class="card mt-3 bg-secondary p-2" style="width:fit-content; max-width: 50%;">
                                        <div class="fw-sm text-sm text-white" style="font-size: x-small;">
                                            @message.Timestamp @receiverName
                                        </div>
                                        <div class="text-white" style="width:fit-content;">@message.Content</div>
                                    </div>
                                }
                        </div>
                    }
                </div>
                
            }
        </div>
    </div>


    <div class="container mt-2">
        <div class="row">
            <div class="col-md-12">
                <form id="chat-form">
                    <div class="input-group">
                        <input type="text" id="chat-input" class="form-control" placeholder="Type your message..." />
                        <button type="submit" class="btn text-white" id="send-button" style="background-color: green;">
                            <i class="bx bx-send text-white"></i> Send
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Add this JavaScript at the bottom of your ChatDetails view -->

<script>
    $(document).ready(function () {
        $("#chat-form").submit(function (e) {
            e.preventDefault();
            var messageContent = $("#chat-input").val();

            if (messageContent.trim() !== "") {
                var currentUserId = "@ViewBag.CurrentUserId";
                var receiverId = "@ViewBag.ReceiverId";
                var messageData = {
                    Content: messageContent,
                    SenderID: currentUserId,
                    ReceiverID: receiverId,
                    Timestamp: new Date().toISOString()
                };

                $.ajax({
                    url: "@Url.Action("SendMessage", "Home")",
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(messageData),
                    success: function (response) {
                        $("#chat-input").val("");

                        // Reload the page to fetch the updated messages
                        location.reload();
                    },
                    error: function (error) {
                        console.log("Error: " + error);
                    }
                });
            }
        });
    });
</script>


<!-- Include SignalR library in your view -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.on("ReceiveMessage", (message) => {
        // Update your chat interface with the received message
        console.log(message.messageID);
        connection.invoke("MarkMessageAsRead", message.messageID)
            .catch((error) => console.error(error));
    
        updateChatInterface(message);
    });

    connection.start().then(() => {
        console.log("SignalR connection started");
    }).catch(err => console.error(err));

    // Function to update the chat interface with the received message
    function updateChatInterface(message) {
        // Assuming you have a container div with the id "chat-messages"
        var chatMessagesContainer = document.getElementById("chat-messages");

        // Create a new div for the received message
        var messageDiv = document.createElement("div");

        
        messageDiv.className = "card mt-3 bg-secondary p-2";
        messageDiv.style.width = "fit-content";
        messageDiv.style.maxWidth = "50%";

        // Add timestamp and content to the message div
        var timestampDiv = document.createElement("div");
        timestampDiv.className = "fw-sm text-sm text-white";
        timestampDiv.style.fontSize = "x-small";
        timestampDiv.textContent = message.timestamp + " " + "@ViewBag.ReceiverName";

        var contentDiv = document.createElement("div");
        contentDiv.className = "text-white";
        contentDiv.style.width = "fit-content";
        contentDiv.textContent = message.content;

        // Append timestamp and content to the message div
        messageDiv.appendChild(timestampDiv);
        messageDiv.appendChild(contentDiv);

        // Append the message div to the chat container
        chatMessagesContainer.appendChild(messageDiv);


        // Scroll to the bottom to show the latest message
        chatMessagesContainer.scrollTop = chatMessagesContainer.scrollHeight;
    }
</script>
